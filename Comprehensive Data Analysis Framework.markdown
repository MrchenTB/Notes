# 全面數據分析框架

一個全面的數據分析是一個結構化的過程，旨在從數據中提取洞見，為建模或決策提供基礎。以下框架針對艾姆斯房屋價格數據集（目標：預測 `SalePrice`）設計，涵蓋從問題理解到假設檢驗的六個階段，並包括進階分析。每個階段包含明確的目標、步驟、工具和輸出。

---

## 1. 理解問題

**目標**：明確分析目標，理解數據背景，評估每個變量的意義和重要性。

**步驟**：
- **定義問題**：確認核心目標，如預測房屋售價 (`SalePrice`)。
- **數據背景研究**：了解數據來源和上下文，例如艾姆斯數據集來自美國愛荷華州，包含79個變量。
- **變量審視**：檢查每個變量（如 `MSSubClass`、 `LotArea`、 `OverallQual`）的定義、類型（連續、分類、有序）和潛在影響。
  - 示例：`OverallQual`（整體質量）可能與價格高度正相關；`Neighborhood` 反映地理價值差異。
- **邏輯分析**：思考變量與問題的關係，例如 `PoolArea`（泳池面積）可能僅對高端房屋價格有顯著影響。
- **假設生成**：提出初步假設，如「較新房屋（`YearBuilt`）售價更高」或「地下室質量（`BsmtQual`）與價格正相關」。

**工具**：
- 文檔閱讀：`data_description.txt`。
- Python 庫：Pandas（檢查數據結構）、Jupyter Notebook（記錄思路）。

**輸出**：
- 問題陳述和目標。
- 變量清單及其初步重要性評估。
- 初始假設列表。

---

## 2. 單變量研究

**目標**：分析每個變量（特別是目標變量 `SalePrice`）的分佈、統計特徵和潛在問題。

**步驟**：
- **目標變量分析**（`SalePrice`）：
  - 計算統計量：均值、中位數、標準差、四分位數、最小值、最大值。
  - 可視化分佈：直方圖（檢查偏態）、箱線圖（檢查異常值）、核密度圖（KDE）。
  - 檢查偏態：若右偏，考慮對數變換以接近正態分佈。
- **自變量分析**：
  - **連續變量**（如 `LotArea`、 `GrLivArea`）：計算統計量，繪製直方圖/箱線圖，檢查分佈和異常值。
  - **分類變量**（如 `MSZoning`、 `Neighborhood`）：繪製條形圖，檢查類別頻次和稀有類別。
  - **有序變量**（如 `OverallQual`、 `ExterQual`）：驗證類別分佈和有序性。
- **異常值檢測**：識別極端值（如過大的 `LotArea` 或不合理的 `YearBuilt`）。
- **缺失值檢查**：計算缺失值比例，區分真實缺失與類別性 `NA`（如 `Alley` 的 `NA` 表示無巷道）。

**工具**：
- Python 庫：Pandas（`describe()`、 `value_counts()`）、Matplotlib/Seaborn（可視化）、NumPy（統計計算）。
- 統計指標：偏態（skewness）、峰態（kurtosis）。

**輸出**：
- 變量統計摘要和可視化圖表。
- 目標變量分佈特徵（是否需要變換）。
- 異常值和缺失值初步報告。

---

## 3. 多變量研究

**目標**：探索目標變量與自變量的關係，以及自變量間的相互作用，為特徵選擇和建模提供洞見。

**步驟**：
- **相關性分析**：
  - 計算連續變量與 `SalePrice` 的皮爾遜相關係數，繪製熱圖。
  - 檢查高相關變量（如 `GrLivArea`、 `TotalBsmtSF`），識別潛在共線性。
- **分類變量與目標變量關係**：
  - 對 `Neighborhood`、 `OverallQual` 等繪製箱線圖/小提琴圖，觀察 `SalePrice` 分佈。
  - 使用分組統計（如按 `MSZoning` 計算 `SalePrice` 均值）比較類別差異。
- **變量間交互作用**：
  - 探索變量組合影響，如 `OverallQual` 和 `GrLivArea` 的交互（高質量大面積房屋價格是否更高）。
  - 使用散點圖（按類別著色）或分組箱線圖可視化。
- **共線性檢查**：
  - 計算自變量間相關性矩陣，檢查高相關變量對（如 `GarageArea` 和 `GarageCars`）。
  - 使用方差膨脹因子（VIF）量化共線性。

**工具**：
- Python 庫：Seaborn（`heatmap`、 `boxplot`）、Pandas（`corr()`）、Statsmodels（VIF 計算）。
- 可視化：散點圖、成對圖（`pairplot`）。

**輸出**：
- 目標變量與自變量相關性報告。
- 關鍵變量與 `SalePrice` 的可視化關係。
- 共線性和交互作用結論。

---

## 4. 基本清理

**目標**：清理數據集，處理缺失值、異常值和分類變量，確保數據適合建模。

**步驟**：
- **缺失值處理**：
  - **類別性 `NA`**：將 `NA` 視為有效類別（如 `BsmtQual` 的 `NA` 表示無地下室）。
  - **真實缺失值**：
    - 少量缺失：用中位數（連續變量，如 `LotFrontage`）或眾數（分類變量，如 `Electrical`）填補。
    - 大量缺失：考慮刪除變量（如缺失率 > 50%）或使用 KNN 插值。
  - 記錄填補方法，確保可重現。
- **異常值處理**：
  - 使用 IQR 法或箱線圖識別異常值。
  - 決定保留、刪除或截斷異常值（如 `LotArea` 極大值）。
- **分類變量編碼**：
  - **有序變量**：將 `ExterQual`（Po < Fa < TA < Gd < Ex）映射為數值（0-4）。
  - **無序變量**：對 `Neighborhood` 進行 one-hot 編碼。
  - **高基數變量**：對 `Neighborhood`（25 個類別）考慮頻率編碼或目標編碼。
- **數據格式轉換**：
  - 確保變量類型正確（如 `MSSubClass` 為類別型）。
  - 標準化連續變量（如 `LotArea`）以消除量綱影響。

**工具**：
- Python 庫：Pandas（填補、編碼）、Scikit-learn（`StandardScaler`、 `OneHotEncoder`）、Fancyimpute（KNN 插值）。
- 方法：IQR、Z-score。

**輸出**：
- 清理後數據集。
- 缺失值和異常值處理記錄。
- 編碼後變量清單。

---

## 5. 檢驗假設

**目標**：檢查數據是否滿足多變量分析技術（如線性回歸、PCA）的統計假設。

**步驟**：
- **正態性假設**：
  - 檢查 `SalePrice` 和連續變量分佈，使用 Shapiro-Wilk 檢驗或 Q-Q 圖。
  - 若偏態嚴重，應用對數變換或 Box-Cox 變換。
- **線性假設**：
  - 使用散點圖檢查 `SalePrice` 與連續變量（如 `GrLivArea`）的線性關係。
  - 若非線性，考慮特徵變換或非線性模型。
- **獨立性假設**：
  - 確認觀測值間獨立（艾姆斯數據集通常滿足）。
- **同方差性假設**：
  - 檢查線性回歸殞差是否隨預測值變化（使用殞差圖）。
- **共線性假設**：
  - 使用 VIF 檢查自變量共線性，VIF > 10 表示需刪除或合併變量。
- **數據質量假設**：
  - 檢查輸入錯誤（如 `YearBuilt` > `YrSold`）。

**工具**：
- Python 庫：Scipy（`shapiro`）、Statsmodels（殞差分析、VIF）、Matplotlib（Q-Q 圖）。
- 方法：Box-Cox 變換、殞差診斷。

**輸出**：
- 假設檢驗結果報告。
- 數據變換建議（如對 `SalePrice` 對數變換）。
- 共線性處理措施。

---

## 6. 進階分析（可選）

**目標**：通過特徵工程、降維和初步建模增強洞見，為後續建模優化數據。

**步驟**：
- **特徵工程**：
  - 創建新特徵：房屋年齡（`YrSold - YearBuilt`）、總浴室數（`FullBath + 0.5 * HalfBath`）、每房間面積（`GrLivArea / TotRmsAbvGrd`）。
  - 聚類特徵：按 `Neighborhood` 計算平均 `SalePrice` 作為新特徵。
- **降維**：
  - 使用 PCA 或基於隨機森林的特徵重要性選擇關鍵變量。
- **初步建模**：
  - 嘗試線性回歸、隨機森林或 XGBoost，評估性能（RMSE）。
  - 使用 K-fold 交叉驗證確保穩健性。
- **模型解釋**：
  - 使用 SHAP 或 LIME 分析特徵貢獻。

**工具**：
- Python 庫：Scikit-learn（PCA、模型）、XGBoost、SHAP。
- 方法：K-fold 交叉驗證、特徵重要性排序。

**輸出**：
- 新特徵清單。
- 降維或特徵選擇結果。
- 初步模型性能和特徵重要性。

---

## 全面數據分析的特徵

一個全面的數據分析應具備以下特徵：
- **結構化**：遵循清晰步驟，邏輯連貫。
- **可視化驅動**：大量使用圖表（直方圖、散點圖、熱圖）增強理解。
- **可重現**：記錄所有步驟（使用 Jupyter Notebook）。
- **業務導向**：圍繞目標（如預測房屋價格）進行分析。
- **迭代性**：根據結果反覆調整假設、清理或特徵工程。

---

## 應用示例：艾姆斯房屋價格數據集

1. **理解問題**：目標是預測 `SalePrice`，假設 `OverallQual` 和 `GrLivArea` 是關鍵變量。
2. **單變量研究**：發現 `SalePrice` 右偏，應用對數變換；`LotFrontage` 缺失 15%，`PoolQC` 99% 為 `NA`。
3. **多變量研究**：`OverallQual` 與 `SalePrice` 相關係數 0.79，`Neighborhood` 對價格影響顯著。
4. **基本清理**：用中位數填補 `LotFrontage`，將 `PoolQC` 的 `NA` 視為「無泳池」，對 `ExterQual` 進行有序編碼。
5. **檢驗假設**：對數變換後 `SalePrice` 接近正態；`GarageArea` 和 `GarageCars` 共線性高，刪除 `GarageCars`。
6. **進階分析**：創建房屋年齡特徵，初步建模顯示 `OverallQual` 重要性最高。

---

## 學習建議

- **工具實踐**：使用 Pandas、Seaborn、Scikit-learn 實現分析。
- **參考資源**：學習 Kaggle 高分 Notebook，借鑑 EDA 和特徵工程。
- **記錄過程**：在 Jupyter Notebook 中記錄代碼、圖表和結論。
- **迭代改進**：根據建模結果返回 EDA，優化特徵或清理。
